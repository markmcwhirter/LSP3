@page
@model LSP3.Pages.BookReportModel
@{
    Layout = "_Layout";
    var booksale = Model.BookSaleData;
}

<div id="myGrid" class="ag-theme-alpine" style="height: 780px; width:100%;"></div>
<script type="text/javascript">


    // Grid Options are properties passed to the grid
    const gridOptions = {

        // each entry here represents one column
        columnDefs: [
            { field: "saleID", headerName: 'Sale ID', width: 100, cellDataType: 'number', resizable: true },
            { field: "author", headerName: 'Author', width: 200, cellDataType: 'text', resizable: true },
            { field: "title", headerName: 'Title', width: 300, cellDataType: 'text', resizable: true },
            { field: "vendorName", headerName: 'Vendor', width: 150, cellDataType: 'text', resizable: true },
            { field: "salesDate", headerName: 'Sales Date', width: 150, cellDataType: 'text', resizable: true },
            { field: "unitsSold", headerName: 'Units Sold', width: 150, cellDataType: 'number', resizable: true },
            { field: "unitsToDate", headerName: 'Units To Date', width: 150, cellDataType: 'number', resizable: true },
            { field: "salesThisPeriod", headerName: 'Sales Period', width: 150, cellDataType: 'number', resizable: true },
            { field: "salesToDate", headerName: 'Sales To Date', width: 150, cellDataType: 'number', resizable: true },
            { field: "royalty", headerName: 'Royalty', width: 150, cellDataType: 'number', resizable: true }
        ],

        // default col def properties get applied to all columns
        defaultColDef: { sortable: true, filter: true },

        rowSelection: 'multiple', // allow rows to be selected
        animateRows: true, // have rows animate to new positions when sorted

        // example event handler
        onCellClicked: params => {
            console.log('cell was clicked', params)
        }
    };

    // get div to host the grid
    const eGridDiv = document.getElementById("myGrid");
    // new grid instance, passing in the hosting DIV and Grid Options
    new agGrid.Grid(eGridDiv, gridOptions);

    // Fetch data from server
    debugger
    
    fetch("http://164.92.99.186:8080/api/sale/getsales")
        .then(response => response.json())
        .then(data => {
            data.forEach(function (i) {
                i.salesDate = i.salesDate.substring(0, 10);
                i.title = i.title.replaceAll("&amp;", "&");
                i.title = i.title.replaceAll("&#39;", "'");

                switch (i.vendorID) {
                    case 1:
                        i.vendorName = "Amazon";
                        break;
                    case 2:
                        i.vendorName = "Kindle";
                        break;
                    case 3:
                        i.vendorName = "Barnes and Noble";
                        break;
                    case 4:
                        i.vendorName = "Nook";
                        break;
                    case 5:
                        i.vendorName = "Paperbook";
                        break;
                    case 6:
                        i.vendorName = "EBook";
                        break;
                    default:
                        i.vendorName = "";
                        break;
                }
            });
            // load fetched data into grid
            gridOptions.api.setRowData(data);
        });
</script>
