@page
@model LSP3.Pages.BookSalesModel
@{
    Layout = "_LayoutAdmin";
    var booksale = Model.BookSaleData;
}

<div id="myGrid" class="ag-theme-alpine" style="height: 780px; width:100%;"></div>

<script type="text/javascript">

    /*
    AuthorID
    Author
    Title
    SaleID
    BookID
    VendorID
    VendorName
    SalesDate
    AuthorComp
    UnitsSold
    Royalty
    SalesToDate
    UnitsToDate
    SalesThisPeriod
    DateCreated
    DateUpdated
        */
    // Column definitions
    const columnDefs = [
        { field: "authorID", headerName: 'Author ID', width: 100, cellDataType: 'number', resizable: true },
        { field: "author", headerName: 'Author', width: 200, cellDataType: 'text', resizable: true },
        { field: "title", headerName: 'Title', width: 300, cellDataType: 'text', resizable: true },
        { field: "saleID", headerName: 'Sale ID', width: 100, cellDataType: 'number', resizable: true },
        { field: "bookID", headerName: 'Author ID', width: 100, cellDataType: 'number', resizable: true },
        { field: "vendorID", headerName: 'Vendor ID', width: 150, cellDataType: 'number', resizable: true },
        { field: "vendorName", headerName: 'Vendor', width: 150, cellDataType: 'text', resizable: true },
        { field: "salesDate", headerName: 'Sales Date', width: 150, cellDataType: 'text', resizable: true },
        { field: "authorComp", headerName: 'Author Comp', width: 150, cellDataType: 'number', resizable: true },
        { field: "unitsSold", headerName: 'Units Sold', width: 150, cellDataType: 'number', resizable: true },
        { field: "royalty", headerName: 'Royalty', width: 150, cellDataType: 'number', resizable: true },
        { field: "salesToDate", headerName: 'Sales To Date', width: 150, cellDataType: 'number', resizable: true },
        { field: "unitsToDate", headerName: 'Units To Date', width: 150, cellDataType: 'number', resizable: true },
        { field: "salesThisPeriod", headerName: 'Sales Period', width: 150, cellDataType: 'number', resizable: true },
        { field: "dateCreated", headerName: 'Date Created', width: 150, cellDataType: 'text', resizable: true },
        { field: "dateUpdated", headerName: 'Date Updated', width: 150, cellDataType: 'text', resizable: true }
    ];

    const gridOptions = {
        columnDefs: columnDefs,
        pagination: true,
        paginationPageSize: 20,
        rowGroupPanelShow: "always",
        pivotPanelShow: "always",

        // Enable server-side sorting and filtering
        rowModelType: 'serverSide',

        // Datasource definition
        serverSideDatasource: {
            getRows: (params) => { // This function is called by ag-Grid
                const { startRow, endRow, sortModel } = params.request;


                let sortColumn = 'saleID';
                let sortDirection = 'desc';

                // Extract sorting information
                if (sortModel.length > 0) {
                    sortColumn = sortModel[0].colId;
                    sortDirection = sortModel[0].sort;
                }

                const url = API_URL + `sale/gridsearch?startRow=${startRow}&endRow=${endRow}&sortColumn=${sortColumn}&sortDirection=${sortDirection}`;
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        params.success({ rowData: data, rowCount: data.length });  // Adjust 'totalRecords' if your API provides it
                    })
                    .catch(error => {
                        console.error("Error fetching data:", error);
                        params.fail();
                    });
            }
        }

    };


    // Create the grid instance
    new agGrid.createGrid(document.getElementById('myGrid'), gridOptions);

</script>
